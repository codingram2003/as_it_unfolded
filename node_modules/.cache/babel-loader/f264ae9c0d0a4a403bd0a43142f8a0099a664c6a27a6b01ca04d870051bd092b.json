{"ast":null,"code":"var _jsxFileName = \"D:\\\\as it unfolded\\\\lockdowndiaries\\\\src\\\\animatetext.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useAnimation, motion } from \"framer-motion\";\nimport { useInView } from \"react-intersection-observer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Title = styled.h2`\nfont-size: 3rem;\nfont-weight: 600;\n`;\n_c = Title;\nconst Character = styled(motion.span)`\ndisplay: inline-block;\nmargin-right: -0.05em;\n`;\n_c2 = Character;\nexport default function AnimatedTitle() {\n  _s();\n  const text = 'Animated Text'; // This would normally be passed into this component as a prop!\n  const ctrls = useAnimation();\n  const {\n    ref,\n    inView\n  } = useInView({\n    threshold: 0.5,\n    triggerOnce: true\n  });\n  useEffect(() => {\n    if (inView) {\n      ctrls.start(\"visible\");\n    }\n    if (!inView) {\n      ctrls.start(\"hidden\");\n    }\n  }, [ctrls, inView]);\n  const characterAnimation = {\n    hidden: {\n      opacity: 0,\n      y: `0.25em`\n    },\n    visible: {\n      opacity: 1,\n      y: `0em`,\n      transition: {\n        duration: 1,\n        ease: [0.2, 0.65, 0.3, 0.9]\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Title, {\n    \"aria-label\": text,\n    role: \"heading\",\n    children: text.split(\"\").map((character, index) => /*#__PURE__*/_jsxDEV(Character, {\n      ref: ref,\n      \"aria-hidden\": \"true\",\n      initial: \"hidden\",\n      animate: ctrls,\n      variants: characterAnimation,\n      children: character\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(AnimatedTitle, \"bZu3knhHvzceubag7LfZdRw4NLY=\", false, function () {\n  return [useAnimation, useInView];\n});\n_c3 = AnimatedTitle;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"Character\");\n$RefreshReg$(_c3, \"AnimatedTitle\");","map":{"version":3,"names":["useEffect","styled","useAnimation","motion","useInView","jsxDEV","_jsxDEV","Title","h2","_c","Character","span","_c2","AnimatedTitle","_s","text","ctrls","ref","inView","threshold","triggerOnce","start","characterAnimation","hidden","opacity","y","visible","transition","duration","ease","role","children","split","map","character","index","initial","animate","variants","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["D:/as it unfolded/lockdowndiaries/src/animatetext.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useAnimation, motion } from \"framer-motion\";\r\nimport { useInView } from \"react-intersection-observer\";\r\n\r\nconst Title = styled.h2`\r\nfont-size: 3rem;\r\nfont-weight: 600;\r\n`;\r\n\r\n\r\nconst Character = styled(motion.span)`\r\ndisplay: inline-block;\r\nmargin-right: -0.05em;\r\n`;\r\n\r\n\r\nexport default function AnimatedTitle() {\r\n  const text = 'Animated Text'; // This would normally be passed into this component as a prop!\r\n  const ctrls = useAnimation();\r\n  const { ref, inView } = useInView({\r\n    threshold: 0.5,\r\n    triggerOnce: true,\r\n  });\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    if (inView) {\r\n      ctrls.start(\"visible\");\r\n    }\r\n\r\n    if (!inView) {\r\n      ctrls.start(\"hidden\");\r\n    }\r\n  }, [ctrls, inView]); \r\n\r\n  const characterAnimation = {\r\n    hidden: {\r\n      opacity: 0,\r\n      y: `0.25em`,\r\n    },\r\n\r\n    visible: {\r\n      opacity: 1,\r\n      y: `0em`,\r\n      transition: {\r\n        duration: 1,\r\n        ease: [0.2, 0.65, 0.3, 0.9],\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <Title aria-label={text} role=\"heading\">\r\n      {text.split(\"\").map((character, index) => (\r\n        <Character\r\n          ref={ref}\r\n          aria-hidden=\"true\"\r\n          key={index}\r\n          initial=\"hidden\"\r\n          animate={ctrls}\r\n          variants={characterAnimation}\r\n        >\r\n          {character}\r\n        </Character>\r\n        ))\r\n    }\r\n\r\n    </Title>\r\n\r\n  );\r\n\r\n}"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,YAAY,EAAEC,MAAM,QAAQ,eAAe;AACpD,SAASC,SAAS,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,KAAK,GAAGN,MAAM,CAACO,EAAG;AACxB;AACA;AACA,CAAC;AAACC,EAAA,GAHIF,KAAK;AAMX,MAAMG,SAAS,GAAGT,MAAM,CAACE,MAAM,CAACQ,IAAI,CAAE;AACtC;AACA;AACA,CAAC;AAACC,GAAA,GAHIF,SAAS;AAMf,eAAe,SAASG,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAMC,IAAI,GAAG,eAAe,CAAC,CAAC;EAC9B,MAAMC,KAAK,GAAGd,YAAY,CAAC,CAAC;EAC5B,MAAM;IAAEe,GAAG;IAAEC;EAAO,CAAC,GAAGd,SAAS,CAAC;IAChCe,SAAS,EAAE,GAAG;IACdC,WAAW,EAAE;EACf,CAAC,CAAC;EAIFpB,SAAS,CAAC,MAAM;IACd,IAAIkB,MAAM,EAAE;MACVF,KAAK,CAACK,KAAK,CAAC,SAAS,CAAC;IACxB;IAEA,IAAI,CAACH,MAAM,EAAE;MACXF,KAAK,CAACK,KAAK,CAAC,QAAQ,CAAC;IACvB;EACF,CAAC,EAAE,CAACL,KAAK,EAAEE,MAAM,CAAC,CAAC;EAEnB,MAAMI,kBAAkB,GAAG;IACzBC,MAAM,EAAE;MACNC,OAAO,EAAE,CAAC;MACVC,CAAC,EAAG;IACN,CAAC;IAEDC,OAAO,EAAE;MACPF,OAAO,EAAE,CAAC;MACVC,CAAC,EAAG,KAAI;MACRE,UAAU,EAAE;QACVC,QAAQ,EAAE,CAAC;QACXC,IAAI,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;MAC5B;IACF;EACF,CAAC;EACD,oBACEvB,OAAA,CAACC,KAAK;IAAC,cAAYQ,IAAK;IAACe,IAAI,EAAC,SAAS;IAAAC,QAAA,EACpChB,IAAI,CAACiB,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK,kBACnC7B,OAAA,CAACI,SAAS;MACRO,GAAG,EAAEA,GAAI;MACT,eAAY,MAAM;MAElBmB,OAAO,EAAC,QAAQ;MAChBC,OAAO,EAAErB,KAAM;MACfsB,QAAQ,EAAEhB,kBAAmB;MAAAS,QAAA,EAE5BG;IAAS,GALLC,KAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMD,CACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGC,CAAC;AAIZ;AAAC5B,EAAA,CAvDuBD,aAAa;EAAA,QAErBX,YAAY,EACFE,SAAS;AAAA;AAAAuC,GAAA,GAHX9B,aAAa;AAAA,IAAAJ,EAAA,EAAAG,GAAA,EAAA+B,GAAA;AAAAC,YAAA,CAAAnC,EAAA;AAAAmC,YAAA,CAAAhC,GAAA;AAAAgC,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}